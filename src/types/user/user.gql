enum Role {
  ADMIN
  TRAINER
  ATHLETE
}

type User {
  _id: ID!
  name: String!
  surname1: String!
  surname2: String
  phone: String
  role: Role!
  email: String!
  password: String!
  createdAt: String @formatDate
  updatedAt: String @formatDate
  resetPasswordEmailSent: String @formatDate
  lastResetPassword: String @formatDate
  tasks: [Task!]
}

type AuthUser {
  token: String!
  user: User!
}

input NewUserInput {
  name: String!
  surname1: String!
  surname2: String
  email: String!
  password: String!
  phone: String
  role: Role!
}

input UpdateUserInput {
  name: String
}

input SigninInput {
  email: String!
  password: String!
}

type Query {
  users: [User]! @authorized(roles: [ADMIN, TRAINER]) @authenticated
}

type Mutation {
  createUser(input: NewUserInput!): User!
    @authorized(roles: [ADMIN, TRAINER])
    @authenticated

  signin(input: SigninInput!): AuthUser!
}
